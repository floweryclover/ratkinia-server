// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Stc.proto
// Protobuf C++ Version: 5.27.3

#include "Stc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace RatkiniaProtocol {

inline constexpr SendMyCharacters_CharacterLoadData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendMyCharacters_CharacterLoadData::SendMyCharacters_CharacterLoadData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMyCharacters_CharacterLoadDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMyCharacters_CharacterLoadDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMyCharacters_CharacterLoadDataDefaultTypeInternal() {}
  union {
    SendMyCharacters_CharacterLoadData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMyCharacters_CharacterLoadDataDefaultTypeInternal _SendMyCharacters_CharacterLoadData_default_instance_;

inline constexpr RegisterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : failed_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        successful_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterResponse::RegisterResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterResponseDefaultTypeInternal() {}
  union {
    RegisterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;

inline constexpr LoginResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::RatkiniaProtocol::LoginResponse_LoginResult >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoginResponse::LoginResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResponseDefaultTypeInternal() {}
  union {
    LoginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;

inline constexpr Disconnect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Disconnect::Disconnect(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DisconnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisconnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisconnectDefaultTypeInternal() {}
  union {
    Disconnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisconnectDefaultTypeInternal _Disconnect_default_instance_;

inline constexpr CreateCharacterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::RatkiniaProtocol::CreateCharacterResponse_CreateCharacterResult >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateCharacterResponse::CreateCharacterResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateCharacterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCharacterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCharacterResponseDefaultTypeInternal() {}
  union {
    CreateCharacterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCharacterResponseDefaultTypeInternal _CreateCharacterResponse_default_instance_;

inline constexpr SendMyCharacters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : character_load_datas_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendMyCharacters::SendMyCharacters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMyCharactersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMyCharactersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMyCharactersDefaultTypeInternal() {}
  union {
    SendMyCharacters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMyCharactersDefaultTypeInternal _SendMyCharacters_default_instance_;
}  // namespace RatkiniaProtocol
namespace RatkiniaProtocol {
PROTOBUF_CONSTINIT const uint32_t LoginResponse_LoginResult_internal_data_[] = {
    262144u, 0u, };
bool LoginResponse_LoginResult_IsValid(int value) {
  return 0 <= value && value <= 3;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    LoginResponse_LoginResult_strings[4] = {};

static const char LoginResponse_LoginResult_names[] = {
    "DuplicateAccount"
    "DuplicateContext"
    "Failure"
    "Success"
};

static const ::google::protobuf::internal::EnumEntry LoginResponse_LoginResult_entries[] =
    {
        {{&LoginResponse_LoginResult_names[0], 16}, 3},
        {{&LoginResponse_LoginResult_names[16], 16}, 2},
        {{&LoginResponse_LoginResult_names[32], 7}, 1},
        {{&LoginResponse_LoginResult_names[39], 7}, 0},
};

static const int LoginResponse_LoginResult_entries_by_number[] = {
    3,  // 0 -> Success
    2,  // 1 -> Failure
    1,  // 2 -> DuplicateContext
    0,  // 3 -> DuplicateAccount
};

const std::string& LoginResponse_LoginResult_Name(LoginResponse_LoginResult value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          LoginResponse_LoginResult_entries, LoginResponse_LoginResult_entries_by_number,
          4, LoginResponse_LoginResult_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      LoginResponse_LoginResult_entries, LoginResponse_LoginResult_entries_by_number, 4,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : LoginResponse_LoginResult_strings[idx].get();
}

bool LoginResponse_LoginResult_Parse(absl::string_view name, LoginResponse_LoginResult* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      LoginResponse_LoginResult_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<LoginResponse_LoginResult>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LoginResponse_LoginResult LoginResponse::Success;
constexpr LoginResponse_LoginResult LoginResponse::Failure;
constexpr LoginResponse_LoginResult LoginResponse::DuplicateContext;
constexpr LoginResponse_LoginResult LoginResponse::DuplicateAccount;
constexpr LoginResponse_LoginResult LoginResponse::LoginResult_MIN;
constexpr LoginResponse_LoginResult LoginResponse::LoginResult_MAX;
constexpr int LoginResponse::LoginResult_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
PROTOBUF_CONSTINIT const uint32_t CreateCharacterResponse_CreateCharacterResult_internal_data_[] = {
    262144u, 0u, };
bool CreateCharacterResponse_CreateCharacterResult_IsValid(int value) {
  return 0 <= value && value <= 3;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    CreateCharacterResponse_CreateCharacterResult_strings[4] = {};

static const char CreateCharacterResponse_CreateCharacterResult_names[] = {
    "DuplicateName"
    "InvalidNameLength"
    "Success"
    "UnknownError"
};

static const ::google::protobuf::internal::EnumEntry CreateCharacterResponse_CreateCharacterResult_entries[] =
    {
        {{&CreateCharacterResponse_CreateCharacterResult_names[0], 13}, 2},
        {{&CreateCharacterResponse_CreateCharacterResult_names[13], 17}, 1},
        {{&CreateCharacterResponse_CreateCharacterResult_names[30], 7}, 0},
        {{&CreateCharacterResponse_CreateCharacterResult_names[37], 12}, 3},
};

static const int CreateCharacterResponse_CreateCharacterResult_entries_by_number[] = {
    2,  // 0 -> Success
    1,  // 1 -> InvalidNameLength
    0,  // 2 -> DuplicateName
    3,  // 3 -> UnknownError
};

const std::string& CreateCharacterResponse_CreateCharacterResult_Name(CreateCharacterResponse_CreateCharacterResult value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          CreateCharacterResponse_CreateCharacterResult_entries, CreateCharacterResponse_CreateCharacterResult_entries_by_number,
          4, CreateCharacterResponse_CreateCharacterResult_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      CreateCharacterResponse_CreateCharacterResult_entries, CreateCharacterResponse_CreateCharacterResult_entries_by_number, 4,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : CreateCharacterResponse_CreateCharacterResult_strings[idx].get();
}

bool CreateCharacterResponse_CreateCharacterResult_Parse(absl::string_view name, CreateCharacterResponse_CreateCharacterResult* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      CreateCharacterResponse_CreateCharacterResult_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<CreateCharacterResponse_CreateCharacterResult>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::Success;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::InvalidNameLength;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::DuplicateName;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::UnknownError;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::CreateCharacterResult_MIN;
constexpr CreateCharacterResponse_CreateCharacterResult CreateCharacterResponse::CreateCharacterResult_MAX;
constexpr int CreateCharacterResponse::CreateCharacterResult_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Disconnect::_Internal {
 public:
};

Disconnect::Disconnect(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.Disconnect)
}
inline PROTOBUF_NDEBUG_INLINE Disconnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::Disconnect& from_msg)
      : detail_(arena, from.detail_),
        _cached_size_{0} {}

Disconnect::Disconnect(
    ::google::protobuf::Arena* arena,
    const Disconnect& from)
    : ::google::protobuf::MessageLite(arena) {
  Disconnect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.Disconnect)
}
inline PROTOBUF_NDEBUG_INLINE Disconnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : detail_(arena),
        _cached_size_{0} {}

inline void Disconnect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Disconnect::~Disconnect() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.Disconnect)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Disconnect::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.detail_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Disconnect::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<28> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Disconnect, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.Disconnect",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> Disconnect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Disconnect_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::Disconnect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string detail = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.detail_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string detail = 1;
    {PROTOBUF_FIELD_OFFSET(Disconnect, _impl_.detail_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\6\0\0\0\0\0\0"
    "RatkiniaProtocol.Disconnect"
    "detail"
  }},
};

PROTOBUF_NOINLINE void Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.Disconnect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.detail_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* Disconnect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.Disconnect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string detail = 1;
  if (!this->_internal_detail().empty()) {
    const std::string& _s = this->_internal_detail();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RatkiniaProtocol.Disconnect.detail");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.Disconnect)
  return target;
}

::size_t Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.Disconnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string detail = 1;
  if (!this->_internal_detail().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_detail());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Disconnect::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Disconnect*>(
      &from));
}

void Disconnect::MergeFrom(const Disconnect& from) {
  Disconnect* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.Disconnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_detail().empty()) {
    _this->_internal_set_detail(from._internal_detail());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Disconnect::CopyFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Disconnect::InternalSwap(Disconnect* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detail_, &other->_impl_.detail_, arena);
}

// ===================================================================

class LoginResponse::_Internal {
 public:
};

LoginResponse::LoginResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.LoginResponse)
}
LoginResponse::LoginResponse(
    ::google::protobuf::Arena* arena, const LoginResponse& from)
    : LoginResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LoginResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoginResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.LoginResponse)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void LoginResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LoginResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<31> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.LoginResponse",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LoginResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LoginResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::LoginResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.LoginResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* LoginResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.LoginResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.LoginResponse)
  return target;
}

::size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.LoginResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RatkiniaProtocol.LoginResponse.LoginResult result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void LoginResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const LoginResponse*>(
      &from));
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
  LoginResponse* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.LoginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoginResponse::InternalSwap(LoginResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

// ===================================================================

class RegisterResponse::_Internal {
 public:
};

RegisterResponse::RegisterResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.RegisterResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::RegisterResponse& from_msg)
      : failed_reason_(arena, from.failed_reason_),
        _cached_size_{0} {}

RegisterResponse::RegisterResponse(
    ::google::protobuf::Arena* arena,
    const RegisterResponse& from)
    : ::google::protobuf::MessageLite(arena) {
  RegisterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.successful_ = from._impl_.successful_;

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.RegisterResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : failed_reason_(arena),
        _cached_size_{0} {}

inline void RegisterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.successful_ = {};
}
RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.RegisterResponse)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void RegisterResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.failed_reason_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<34> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.RegisterResponse",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> RegisterResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RegisterResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::RegisterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string failed_reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.failed_reason_)}},
    // bool successful = 1;
    {::_pbi::TcParser::FastV8S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.successful_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool successful = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.successful_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string failed_reason = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterResponse, _impl_.failed_reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\15\0\0\0\0\0"
    "RatkiniaProtocol.RegisterResponse"
    "failed_reason"
  }},
};

PROTOBUF_NOINLINE void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.RegisterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.failed_reason_.ClearToEmpty();
  _impl_.successful_ = false;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* RegisterResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.RegisterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool successful = 1;
  if (this->_internal_successful() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_successful(), target);
  }

  // string failed_reason = 2;
  if (!this->_internal_failed_reason().empty()) {
    const std::string& _s = this->_internal_failed_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RatkiniaProtocol.RegisterResponse.failed_reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.RegisterResponse)
  return target;
}

::size_t RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.RegisterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string failed_reason = 2;
  if (!this->_internal_failed_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_failed_reason());
  }

  // bool successful = 1;
  if (this->_internal_successful() != 0) {
    total_size += 2;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void RegisterResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const RegisterResponse*>(
      &from));
}

void RegisterResponse::MergeFrom(const RegisterResponse& from) {
  RegisterResponse* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.RegisterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_failed_reason().empty()) {
    _this->_internal_set_failed_reason(from._internal_failed_reason());
  }
  if (from._internal_successful() != 0) {
    _this->_impl_.successful_ = from._impl_.successful_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterResponse::InternalSwap(RegisterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failed_reason_, &other->_impl_.failed_reason_, arena);
        swap(_impl_.successful_, other->_impl_.successful_);
}

// ===================================================================

class CreateCharacterResponse::_Internal {
 public:
};

CreateCharacterResponse::CreateCharacterResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.CreateCharacterResponse)
}
CreateCharacterResponse::CreateCharacterResponse(
    ::google::protobuf::Arena* arena, const CreateCharacterResponse& from)
    : CreateCharacterResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CreateCharacterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateCharacterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
CreateCharacterResponse::~CreateCharacterResponse() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.CreateCharacterResponse)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void CreateCharacterResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateCharacterResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<41> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CreateCharacterResponse, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.CreateCharacterResponse",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CreateCharacterResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CreateCharacterResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::CreateCharacterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CreateCharacterResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
    {PROTOBUF_FIELD_OFFSET(CreateCharacterResponse, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CreateCharacterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.CreateCharacterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* CreateCharacterResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.CreateCharacterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.CreateCharacterResponse)
  return target;
}

::size_t CreateCharacterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.CreateCharacterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .RatkiniaProtocol.CreateCharacterResponse.CreateCharacterResult result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void CreateCharacterResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const CreateCharacterResponse*>(
      &from));
}

void CreateCharacterResponse::MergeFrom(const CreateCharacterResponse& from) {
  CreateCharacterResponse* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.CreateCharacterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void CreateCharacterResponse::CopyFrom(const CreateCharacterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.CreateCharacterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateCharacterResponse::InternalSwap(CreateCharacterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

// ===================================================================

class SendMyCharacters_CharacterLoadData::_Internal {
 public:
};

SendMyCharacters_CharacterLoadData::SendMyCharacters_CharacterLoadData(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters_CharacterLoadData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::SendMyCharacters_CharacterLoadData& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

SendMyCharacters_CharacterLoadData::SendMyCharacters_CharacterLoadData(
    ::google::protobuf::Arena* arena,
    const SendMyCharacters_CharacterLoadData& from)
    : ::google::protobuf::MessageLite(arena) {
  SendMyCharacters_CharacterLoadData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters_CharacterLoadData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void SendMyCharacters_CharacterLoadData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
SendMyCharacters_CharacterLoadData::~SendMyCharacters_CharacterLoadData() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void SendMyCharacters_CharacterLoadData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMyCharacters_CharacterLoadData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<52> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SendMyCharacters_CharacterLoadData, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.SendMyCharacters.CharacterLoadData",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> SendMyCharacters_CharacterLoadData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SendMyCharacters_CharacterLoadData_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::SendMyCharacters_CharacterLoadData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SendMyCharacters_CharacterLoadData, _impl_.name_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SendMyCharacters_CharacterLoadData, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SendMyCharacters_CharacterLoadData, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(SendMyCharacters_CharacterLoadData, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\0\4\0\0\0\0\0"
    "RatkiniaProtocol.SendMyCharacters.CharacterLoadData"
    "name"
  }},
};

PROTOBUF_NOINLINE void SendMyCharacters_CharacterLoadData::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.id_ = 0u;
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* SendMyCharacters_CharacterLoadData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RatkiniaProtocol.SendMyCharacters.CharacterLoadData.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
  return target;
}

::size_t SendMyCharacters_CharacterLoadData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SendMyCharacters_CharacterLoadData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const SendMyCharacters_CharacterLoadData*>(
      &from));
}

void SendMyCharacters_CharacterLoadData::MergeFrom(const SendMyCharacters_CharacterLoadData& from) {
  SendMyCharacters_CharacterLoadData* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SendMyCharacters_CharacterLoadData::CopyFrom(const SendMyCharacters_CharacterLoadData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.SendMyCharacters.CharacterLoadData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMyCharacters_CharacterLoadData::InternalSwap(SendMyCharacters_CharacterLoadData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

// ===================================================================

class SendMyCharacters::_Internal {
 public:
};

SendMyCharacters::SendMyCharacters(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RatkiniaProtocol.SendMyCharacters)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::RatkiniaProtocol::SendMyCharacters& from_msg)
      : character_load_datas_{visibility, arena, from.character_load_datas_},
        _cached_size_{0} {}

SendMyCharacters::SendMyCharacters(
    ::google::protobuf::Arena* arena,
    const SendMyCharacters& from)
    : ::google::protobuf::MessageLite(arena) {
  SendMyCharacters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:RatkiniaProtocol.SendMyCharacters)
}
inline PROTOBUF_NDEBUG_INLINE SendMyCharacters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : character_load_datas_{visibility, arena},
        _cached_size_{0} {}

inline void SendMyCharacters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendMyCharacters::~SendMyCharacters() {
  // @@protoc_insertion_point(destructor:RatkiniaProtocol.SendMyCharacters)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void SendMyCharacters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMyCharacters::GetClassData() const {
  PROTOBUF_CONSTINIT static const ClassDataLite<34> _data_ =
      {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SendMyCharacters, _impl_._cached_size_),
              true,
          },
          "RatkiniaProtocol.SendMyCharacters",
      };

  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SendMyCharacters::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SendMyCharacters_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RatkiniaProtocol::SendMyCharacters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .RatkiniaProtocol.SendMyCharacters.CharacterLoadData character_load_datas = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendMyCharacters, _impl_.character_load_datas_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .RatkiniaProtocol.SendMyCharacters.CharacterLoadData character_load_datas = 1;
    {PROTOBUF_FIELD_OFFSET(SendMyCharacters, _impl_.character_load_datas_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RatkiniaProtocol::SendMyCharacters_CharacterLoadData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMyCharacters::Clear() {
// @@protoc_insertion_point(message_clear_start:RatkiniaProtocol.SendMyCharacters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_load_datas_.Clear();
  _internal_metadata_.Clear<std::string>();
}

::uint8_t* SendMyCharacters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RatkiniaProtocol.SendMyCharacters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .RatkiniaProtocol.SendMyCharacters.CharacterLoadData character_load_datas = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_character_load_datas_size());
       i < n; i++) {
    const auto& repfield = this->_internal_character_load_datas().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RatkiniaProtocol.SendMyCharacters)
  return target;
}

::size_t SendMyCharacters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RatkiniaProtocol.SendMyCharacters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .RatkiniaProtocol.SendMyCharacters.CharacterLoadData character_load_datas = 1;
  total_size += 1UL * this->_internal_character_load_datas_size();
  for (const auto& msg : this->_internal_character_load_datas()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void SendMyCharacters::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const SendMyCharacters*>(
      &from));
}

void SendMyCharacters::MergeFrom(const SendMyCharacters& from) {
  SendMyCharacters* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:RatkiniaProtocol.SendMyCharacters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_character_load_datas()->MergeFrom(
      from._internal_character_load_datas());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void SendMyCharacters::CopyFrom(const SendMyCharacters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RatkiniaProtocol.SendMyCharacters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMyCharacters::InternalSwap(SendMyCharacters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.character_load_datas_.InternalSwap(&other->_impl_.character_load_datas_);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace RatkiniaProtocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
